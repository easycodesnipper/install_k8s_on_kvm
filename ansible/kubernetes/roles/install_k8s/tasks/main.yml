---
- name: Check if kubeadm is installed
  shell: kubeadm version > /dev/null 2>&1
  register: kubeadm_installed
  ignore_errors: yes

- name: Check if kubelet is installed
  shell: kubelet --version > /dev/null 2>&1
  register: kubelet_installed
  ignore_errors: yes

- name: Check if kubectl is installed
  shell: kubectl version --client > /dev/null 2>&1
  register: kubectl_installed
  ignore_errors: yes

- name: Install kubeadm kubelet kubectl components
  block:
  - name: Download Kubernetes GPG key
    get_url:
      url: "{{ k8s_repo_uri }}/core:/stable:/v{{ k8s_version | regex_replace('\\.\\d+$', '') }}/deb/Release.key"
      dest: /tmp/k8s.gpg
      mode: '0644'
    register: download_result
    retries: 10
    delay: 5
    until: download_result is succeeded

  - name: Convert GPG key to dearmor format
    command: >
      gpg --yes --dearmor -o /usr/share/keyrings/k8s.gpg /tmp/k8s.gpg

  - name: Remove temporary GPG key file
    file:
      path: /tmp/k8s.gpg
      state: absent

  - name: Add Kubernetes repository
    lineinfile:
      path: /etc/apt/sources.list.d/kubernetes.list
      line: "deb [arch=amd64 signed-by=/usr/share/keyrings/k8s.gpg] {{ k8s_repo_uri }}/core:/stable:/v{{ k8s_version | regex_replace('\\.\\d+$', '') }}/deb/ /"
      create: yes

  - name: Ensure apt update successfully
    include_tasks: "../../common/tasks/ensure_apt_update.yml"

  - name: Install Kubernetes components(kubeadm,kubelet,kubectl)
    apt:
      name:
        - kubelet={{  k8s_version  }}*
        - kubeadm={{  k8s_version  }}*
        - kubectl={{  k8s_version  }}*
      state: present
    register: apt_result
    retries: 5
    delay: 10
    until: apt_result is succeeded

  - name: Mark Kubernetes packages on hold
    command: >
      apt-mark hold {{ item }}
    loop:
      - kubelet
      - kubeadm
      - kubectl
  when: (kubeadm_installed.rc != 0) or (kubelet_installed.rc != 0) or (kubectl_installed.rc != 0)
  
